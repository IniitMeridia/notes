

Activity:

    Write a Bash script using "Command Substitution" to replace all passwords, using openssl, from the file $HOME/PASS/shadow.txt with the MD5 encrypted password: Password1234, with salt: bad4u
    Output of this command should go to the screen/standard output.
    You are not limited to a particular command, however you must use openssl. Type man openssl passwd for more information.

TIP: While not required, using awk is possibly the most straightforward method of accomplishing this activity. Keep in mind that awk is its own programming language. It can not use Bash variables unless you import them in. Below is a break down of applicable parts of an awk command, with descriptions of each part. See if you can use this example as a jumping off point to accomplish the end state of the activity.

#!/bin/bash 

a=”New name to place in field one” 
awk -F: -v "awk_var=$a" 'BEGIN {OFS=":"} {$1=awk_var} {print $1,$NF}' /etc/passwd

# '-F' is used to change the default field seperator of " ".  In this example, it	\
# now designates ':'

# '-v' designates or imports a variable into AWK.  In the above example, 'awk_var' is 	\
# declared with the Bash variable of '$a'.

# The 'BEGIN' pattern(s) tells AWK to execute action parts of the pattern before any of	\
# the input is read.  In this case, the 'OFS', or 'Output Field Seperator' will place	\
# colons between the firelds being printed in the output.  As well, it will replace the	\
# first field (i.e. '$1') with whatever data is contained in the AWK variable declared	\
# previously.

# The '{print}' statement designates whatever the desired fields are to print.  '$0' is	\
# the variable for the entire line.  The first field is '$1', the second field is '$2',	\
# and so on.  AWK has a builtin variable, '$NF' which evaluates to the number of fields	\
# on a line.  Use this as a shortcut if you need to print the last field on the line.

To read more on Shell Expansion, go to the following resource:

    https://www.gnu.org/software/bash/manual/html_node/Shell-Expansions.html#Shell-Expansions

To read more on the Shadow file format, go to the following resource:

    man shadow.5

====
#!/bin/bash
A=$(openssl passwd -1 -salt bad4u Password1234)
awk -F: -v "awk_var=$A" '{OFS=":"} {$2=awk_var} {print $0}' ~/PASS/shadow.txt
